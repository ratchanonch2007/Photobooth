let stream;
let photoCount = 0;

const video = document.getElementById('video');
const canvas = document.getElementById('canvas');
const captureBtn = document.getElementById('captureBtn');
const saveBtn = document.getElementById('saveBtn');

let selectedFrame = 'classic';

// ‡πÄ‡∏û‡∏¥‡πà‡∏° object ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏Å‡πá‡∏ö‡∏Ñ‡πà‡∏≤‡∏™‡∏µ‡πÅ‡∏•‡∏∞‡∏≠‡∏µ‡πÇ‡∏°‡∏à‡∏¥‡∏Ç‡∏≠‡∏á‡πÅ‡∏ï‡πà‡∏•‡∏∞ frame
const frameStyles = {
    classic: {
        color: '#FF69B4',
        emoji: '‚ú®',
        title: 'Classic Booth',
        background: '#FFF5F8'
    },
    hearts: {
        color: '#FF1493',
        emoji: 'üíñ',
        title: 'Love Frame',
        background: '#FFE6F3'
    },
    stars: {
        color: '#FFD700',
        emoji: '‚≠ê',
        title: 'Star Frame',
        background: '#FFFBE6'
    },
    cute: {
        color: '#FF98CC',
        emoji: 'üå∏',
        title: 'Cute Frame',
        background: '#FFF0F5'
    }
};

// Add frame selection handler
document.querySelectorAll('.frame-option').forEach(option => {
    option.addEventListener('click', () => {
        document.querySelectorAll('.frame-option').forEach(opt => 
            opt.classList.remove('selected'));
        option.classList.add('selected');
        selectedFrame = option.dataset.frame;
    });
});

async function initCamera() {
    try {
        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏°‡∏∑‡∏≠‡∏ñ‡∏∑‡∏≠‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
        const isMobile = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);
        
        const constraints = {
            video: {
                facingMode: isMobile ? "environment" : "user",
                width: { ideal: isMobile ? 1280 : 1920 },
                height: { ideal: isMobile ? 720 : 1080 }
            }
        };

        stream = await navigator.mediaDevices.getUserMedia(constraints);
        video.srcObject = stream;
        
        // ‡∏õ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠‡∏ï‡∏≤‡∏°‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå
        video.style.transform = isMobile ? 'scaleX(1)' : 'scaleX(-1)';
        
        await video.play();
        captureBtn.disabled = false;

        // ‡∏õ‡∏£‡∏±‡∏ö‡∏Ç‡∏ô‡∏≤‡∏î canvas ‡∏ï‡∏≤‡∏°‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠
        canvas.width = video.videoWidth;
        canvas.height = video.videoHeight;
    } catch (err) {
        console.error('Camera error:', err);
        alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏Å‡∏•‡πâ‡∏≠‡∏á');
    }
}

// ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏•‡∏ö‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û
document.querySelectorAll('.delete-btn').forEach(btn => {
    btn.addEventListener('click', () => {
        const photoId = btn.dataset.photo;
        const photo = document.getElementById(`photo${photoId}`);
        photo.src = '';
        photoCount = Math.min(photoCount - 1, 0);
        
        // ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏õ‡∏∏‡πà‡∏° Save
        const validPhotos = Array.from(document.querySelectorAll('.photo'))
            .filter(p => p.src && p.src !== window.location.href);
        if (validPhotos.length === 0) {
            saveBtn.disabled = true;
        }
    });
});

// ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô capture ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏Å‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏†‡∏≤‡∏û
captureBtn.addEventListener('click', () => {
    const context = canvas.getContext('2d');
    canvas.width = video.videoWidth;
    canvas.height = video.videoHeight;
    context.drawImage(video, 0, 0, canvas.width, canvas.height);
    
    // ‡∏´‡∏≤‡∏£‡∏π‡∏õ‡πÅ‡∏£‡∏Å‡∏ó‡∏µ‡πà‡∏ß‡πà‡∏≤‡∏á
    const photos = document.querySelectorAll('.photo');
    let targetPhoto = null;
    for (let i = 0; i < photos.length; i++) {
        if (!photos[i].src || photos[i].src === window.location.href) {
            targetPhoto = photos[i];
            photoCount = i;
            break;
        }
    }
    
    // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ó‡∏µ‡πà‡∏ß‡πà‡∏≤‡∏á ‡πÉ‡∏ä‡πâ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
    if (!targetPhoto) {
        targetPhoto = document.getElementById(`photo${photoCount + 1}`);
        photoCount = (photoCount + 1) % 3;
    }
    
    targetPhoto.src = canvas.toDataURL('image/jpeg');
    saveBtn.disabled = false;
});

// Update save button handler
saveBtn.addEventListener('click', async () => {
    try {
        const photos = Array.from(document.querySelectorAll('.photo'));
        const validPhotos = photos.filter(photo => 
            photo.src && photo.src !== window.location.href);

        if (validPhotos.length === 0) {
            alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ñ‡πà‡∏≤‡∏¢‡∏†‡∏≤‡∏û‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡πâ‡∏≠‡∏¢ 1 ‡∏†‡∏≤‡∏û');
            return;
        }

        const frameStyle = frameStyles[selectedFrame];
        const mergeCanvas = document.createElement('canvas');
        const ctx = mergeCanvas.getContext('2d');
        
        // ‡∏õ‡∏£‡∏±‡∏ö‡∏Ç‡∏ô‡∏≤‡∏î‡∏†‡∏≤‡∏û‡πÉ‡∏´‡πâ‡πÑ‡∏î‡πâ‡∏™‡∏±‡∏î‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏î‡∏µ‡∏Ç‡∏∂‡πâ‡∏ô
        const photoWidth = 400;  // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏ß‡πâ‡∏≤‡∏á
        const photoHeight = 300; // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏π‡∏á
        const spacing = 20;      // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏∞‡∏¢‡∏∞‡∏´‡πà‡∏≤‡∏á
        const padding = 40;      // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡∏≠‡∏ö
        
        // ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Ç‡∏ô‡∏≤‡∏î canvas
        mergeCanvas.width = photoWidth + (padding * 2);
        mergeCanvas.height = (photoHeight * validPhotos.length) + 
                           (spacing * (validPhotos.length - 1)) + 
                           (padding * 2) + 60; // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏´‡∏±‡∏ß‡πÅ‡∏•‡∏∞‡∏ó‡πâ‡∏≤‡∏¢

        // ‡∏ß‡∏≤‡∏î‡∏û‡∏∑‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á
        ctx.fillStyle = frameStyle.background;
        ctx.fillRect(0, 0, mergeCanvas.width, mergeCanvas.height);

        // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡∏±‡∏ß‡∏Å‡∏£‡∏∞‡∏î‡∏≤‡∏©
        ctx.font = 'bold 36px Prompt';
        ctx.fillStyle = frameStyle.color;
        ctx.textAlign = 'center';
        ctx.fillText(
            `${frameStyle.emoji} Photo Booth ${frameStyle.emoji}`, 
            mergeCanvas.width/2, 
            padding
        );

        // ‡∏ß‡∏≤‡∏î‡∏£‡∏π‡∏õ‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏£‡∏π‡∏õ‡πÉ‡∏ô‡πÅ‡∏ô‡∏ß‡∏ï‡∏±‡πâ‡∏á
        let yOffset = padding + 40; // ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á‡∏´‡∏±‡∏ß‡∏Å‡∏£‡∏∞‡∏î‡∏≤‡∏©
        
        await Promise.all(validPhotos.map(async (photo, index) => {
            // ‡∏ß‡∏≤‡∏î‡∏Å‡∏£‡∏≠‡∏ö‡∏î‡πâ‡∏≤‡∏ô‡∏´‡∏•‡∏±‡∏á
            ctx.fillStyle = '#FFFFFF';
            ctx.fillRect(padding, yOffset, photoWidth, photoHeight);
            
            // ‡∏ß‡∏≤‡∏î‡∏£‡∏π‡∏õ
            ctx.drawImage(photo, 
                padding, yOffset, 
                photoWidth, photoHeight
            );
            
            // ‡∏ß‡∏≤‡∏î‡∏Å‡∏£‡∏≠‡∏ö
            ctx.strokeStyle = frameStyle.color;
            ctx.lineWidth = 4;
            ctx.strokeRect(padding, yOffset, photoWidth, photoHeight);
            
            // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏≠‡∏µ‡πÇ‡∏°‡∏à‡∏¥‡∏ó‡∏µ‡πà‡∏°‡∏∏‡∏°
            ctx.font = '24px Arial';
            ctx.fillStyle = frameStyle.color;
            ctx.textAlign = 'left';
            ctx.fillText(frameStyle.emoji, 
                padding + 10, 
                yOffset + 30
            );
            
            yOffset += photoHeight + spacing;
        }));

        // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ó‡πâ‡∏≤‡∏¢‡∏Å‡∏£‡∏∞‡∏î‡∏≤‡∏©
        ctx.font = '20px Prompt';
        ctx.fillStyle = frameStyle.color;
        ctx.textAlign = 'center';
        const date = new Date().toLocaleDateString('th-TH', {
            year: 'numeric',
            month: 'long',
            day: 'numeric'
        });
        ctx.fillText(date, mergeCanvas.width/2, mergeCanvas.height - padding/2);

        // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î
        const link = document.createElement('a');
        link.download = `photobooth-${selectedFrame}-${Date.now()}.jpg`;
        link.href = mergeCanvas.toDataURL('image/jpeg', 1.0); // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î
        document.body.appendChild(link);
        link.click();
        document.body.removeChild(link);
        
        alert(`‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏†‡∏≤‡∏û‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à! ${frameStyle.emoji}`);

    } catch (error) {
        console.error('Save error:', error);
        alert('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏†‡∏≤‡∏û ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á');
    }
});

// ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏™‡∏µ‡∏Å‡∏£‡∏≠‡∏ö‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å frame
document.querySelectorAll('.frame-option').forEach(option => {
    option.addEventListener('click', () => {
        const frame = option.dataset.frame;
        const style = frameStyles[frame];
        document.querySelectorAll('.photo').forEach(photo => {
            photo.style.borderColor = style.color;
        });
    });
});

// ‡πÄ‡∏û‡∏¥‡πà‡∏° touch events ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏õ‡∏∏‡πà‡∏°‡∏ï‡πà‡∏≤‡∏á‡πÜ
document.querySelectorAll('.btn, .frame-option, .delete-btn').forEach(el => {
    el.addEventListener('touchstart', (e) => {
        e.preventDefault();
        el.style.transform = 'scale(0.95)';
    });

    el.addEventListener('touchend', (e) => {
        e.preventDefault();
        el.style.transform = 'scale(1)';
    });
});

// ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ orientation change
window.addEventListener('orientationchange', () => {
    setTimeout(() => {
        // ‡∏£‡∏≠‡πÉ‡∏´‡πâ‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠‡∏´‡∏°‡∏∏‡∏ô‡πÄ‡∏™‡∏£‡πá‡∏à‡∏Å‡πà‡∏≠‡∏ô‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ layout ‡πÉ‡∏´‡∏°‡πà
        const video = document.getElementById('video');
        video.style.height = 'auto';
    }, 200);
});

// Initialize camera
initCamera();

// Cleanup on page unload
window.addEventListener('beforeunload', () => {
    if (stream) {
        stream.getTracks().forEach(track => track.stop());
    }
});
